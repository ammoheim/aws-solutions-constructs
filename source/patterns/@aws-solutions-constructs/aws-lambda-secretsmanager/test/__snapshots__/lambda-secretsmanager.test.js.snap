// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test deployment w/ existing secret 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bArtifactHash42A39A2C": Object {
      "Description": "Artifact hash for asset \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3BucketC6294FB3": Object {
      "Description": "S3 bucket for asset \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A": Object {
      "Description": "S3 key for asset version \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosecretsmanagerstackLambdaFunction2BCCE9C9": Object {
      "DependsOn": Array [
        "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71",
        "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3BucketC6294FB3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "SECRET_NAME": Object {
              "Fn::Select": Array [
                6,
                Object {
                  "Fn::Split": Array [
                    ":",
                    Object {
                      "Ref": "secret4DA88516",
                    },
                  ],
                },
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "secret4DA88516",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71",
        "Roles": Array [
          Object {
            "Ref": "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "secret4DA88516": Object {
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
    },
  },
}
`;

exports[`Test minimal deployment with new Lambda function 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bArtifactHash42A39A2C": Object {
      "Description": "Artifact hash for asset \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3BucketC6294FB3": Object {
      "Description": "S3 bucket for asset \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
    "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A": Object {
      "Description": "S3 key for asset version \\"6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4b\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "lambdatosecretsmanagerstackLambdaFunction2BCCE9C9": Object {
      "DependsOn": Array [
        "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71",
        "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3BucketC6294FB3",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f9a889051a73435842f821b214f7f08d666f4ed8aea2c3c6928113c43077d4bS3VersionKey30C28A5A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "SECRET_NAME": Object {
              "Fn::Select": Array [
                6,
                Object {
                  "Fn::Split": Array [
                    ":",
                    Object {
                      "Ref": "lambdatosecretsmanagerstacksecretBA684E34",
                    },
                  ],
                },
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "lambdatosecretsmanagerstacksecretBA684E34",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "lambdatosecretsmanagerstackLambdaFunctionServiceRoleDefaultPolicy8E30EE71",
        "Roles": Array [
          Object {
            "Ref": "lambdatosecretsmanagerstackLambdaFunctionServiceRole035B2C55",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "lambdatosecretsmanagerstacksecretBA684E34": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "GenerateSecretString": Object {},
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
